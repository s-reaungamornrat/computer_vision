import argparse

parser=argparse.ArgumentParser()
parser.add_argument('--root', type=str, default=None, help='path to data directory')
parser.add_argument('--train-image-dirname', type=str, default='images', help='name of image directory')
parser.add_argument('--train-label-dirname', type=str, default='labels', help='name of label directory')
parser.add_argument('--val-image-dirname', type=str, default='images', help='name of image directory')
parser.add_argument('--val-label-dirname', type=str, default='labels', help='name of label directory')
parser.add_argument('--hyperparam', type=str, default='../default.yaml', help='hyperparameter settings in .yaml file')
parser.add_argument('--data-cfg', type=str, default='../coco128.yaml', help='data configuration in .yaml file')
parser.add_argument('--model-cfg', type=str, default='../yolo11.yaml', help='model configuration in .yaml file')
parser.add_argument('--imgsz', type=int, default=640, help='input image size., i.e., squared images')
parser.add_argument('--batch-size', type=int, default=4, help='batch size for training and validation')
parser.add_argument('--output-dirpath', type=str, default=None, help='path to save output')
parser.add_argument('--checkpoint-dirpath', type=str, default=None, help='path to save model')
parser.add_argument('--latest-checkpoint', type=str, default='last.pt', help='name of latest checkpoint')
parser.add_argument('--best-checkpoint', type=str, default='best.pt', help='name of best checkpoint')
parser.add_argument('--save-period', type=int, default=100, help='epoch frequency to save model')
parser.add_argument('--conf', type=float, default=0.01, help='confidence threshold')
parser.add_argument('--save-json', action='store_true', help='save prediction-validation output in json format')
# args=parser.parse_args(argument.split())
